*Selenium Page Factory:
- Là 1 thư viện của selenium
- Sử dụng FindBy/FindBys/FindAll/PageFactory/CacheLookup
	+ FindBy: tìm 1 hoặc nhiều element thỏa mãn MỘT điều kiện
		eg: @FindBy(how = How.XPATH, using = "//div[@id='ico-login']")
			private WebElement loginForm;
			
			Hoặc ngắn gọn hơn:
			@FindBy(xpath = "//div[@id='ico-login']")
			private WebElement loginForm;
			
			@FindBy(css = "div#ico-login")
			private WebElement loginForm;
			
	+ FindBys: tìm 1 hoặc nhiều element thỏa mãn nhiều điều kiện đồng thời, nếu 1 trong các điều kiện sai thì sẽ không tìm thấy
		 eg: @FindBys({
		 		@FindBy(how = How.NAME, using = "uid")
		 		@FindBy(how = How.NAME, using = "password")
		 	})
		 	private List <WebElement> bothCriteria;
		 	
	+ FindAll: tìm 1 hoặc nhiều element thỏa mãn các điều kiện "hoặc", một trong các điều kiện đúng thì sẽ tìm thấy
		eg: @FindAll({
		 		@FindBy(how = How.NAME, using = "uid")
		 		@FindBy(name = "password")
		 	})
		 	private List <WebElement> bothCriteria;
		 	
	+ CacheLookup: chỉ tìm WebElement 1 lần duy nhất (được cache lại - chỉ sử dụng trong trường hợp element luôn CỐ ĐỊNH trên page, không nên sử dụng khi DOM change)
		eg:	@CacheLookup
			@FindBy(how = How.XPATH, using = "//div[@id='ico-login']")
			private WebElement loginForm;
		-> Tăng performence
		-> Tuy nhiên: trong nhiều trường hợp dẫn đến testcase false do hàm CacheLookup bị lỗi
			
* Page Object, page Factory, Page Generator, Switch page
- Page Object: tạo ra các màn hình riêng, mỗi màn hình có những method chỉ dùng trong màn hình đó. Khi vào màn nào thì gọi những hàm trong màn đó ra để xử lý
	Gồm 3 tầng: testcase, tầng object và tầng UI
	+ Tầng testcase: chứa testcase để gọi ra các phương thức trong tầng object theo steps mong muốn
	+ Tầng Object: chứa các method để thao tác với các locator trong từng màn hình
	+ Tầng UI: chứa các thuộc tính static final (default) là các locator cần thao tác
- Page Factory: cũng chia ra các màn hình riêng như page Object, nhưng chỉ gồm 2 tầng:
	+ Tầng testcase: chứa testcase để gọi ra các phương thức trong tầng object theo steps mong muốn
	+ Tầng object: chứa các method thao tác với các thuộc tính (locator), các thuộc tính (locator) được định nghĩa luôn tại đây và sử dụng annotaion @FindBy để định nghĩa ra chúng
- Page Generator dùng để
	+ Che giấu sự khởi tạo của đối tượng (cụ thể là sự khởi tạo một object mới sau khi thực hiện chuyển trang)
	+ Tạo sự liên kết giữa các object (vd: loginPage = registerPage.clickLoginLink();)
	+ Tránh việc lặp lại steps (ở đây chỉ cần gọi ra method có kiểu public static đã tạo trước đó trong class khác)
- Switch Page:
	+ Đưa vào common (AbstractPage) những hàm dùng chung khi chuyển trang (thường là: menubar, header, footer, sidebar ...)
	+ Mỗi lần chuyển trang thì gọi ra từ AbstractPage