* Nguyên tắc của lập trình hướng đối tượng: 4 nguyên tắc
- Đóng gói - Encapsulation: Đóng gói các thuộc tính/phương thức lại vào 1 class để cho các Class khác kế thừa/ sử dụng + Che giấu sự khởi tạo của đối tượng
	+ access modifier - Phạm vi truy cập: Cho phép 1 class khác có thể truy cập vào thuộc tính/ phương thức của class này hay không (phân quyền chức năng)
- Kế thừa - Inheritance: Cho phép 1 class con có thể sử dụng thuộc tính/phương thức của Class cha chia sẻ cho nó (extend)
- Đa hình - Polymorphism: Một hàm có thể có nhiều hành vi/ trạng thái khác nhau
- Trừu tượng - Abstraction


* Access modifier:
- Private: chỉ sử dụng được trong class chứa nó, không sử dụng được ở các class ngoài
- Default: Khi không set từ khóa nào (public, private,...) thì mặc định là default -> Class khác trong cùng package có thể truy cập được
- Protected: như default nhưng có thêm quyền truy cập bên ngoài package bởi Class con
	+ Class con kế thừa class cha, dùng phương thức "extends"
	+ import class cha vào class con
	+ Dùng phương thức không phải static để lấy được giá trị protected
- Public: dùng được cho mọi class trong project

* Giải thích biến static, final:
- static: Truy cập trực tiếp thông qua tên class, không cần phải new class đó lên
- final: Không được phép gán lại giá trị, không thay đổi được giá trị

- Kết hợp "static final": Coi như là hằng số - Quy ước hằng số viết hoa và có gạch dưới để phân tách các chữ


* Các kiểu dữ liệu:
- Kiểu dữ liệu nguyên thủy: int / float / double / char / byte / short / long / boolean
- Kiểu dữ liệu tham chiếu: String / Array / Object / Class / Collection / ...

* Page Object, page Factory, Page Generator
- Page Object: tạo ra các màn hình riêng, mỗi màn hình có những method chỉ dùng trong màn hình đó. Khi vào màn nào thì gọi những hàm trong màn đó ra để xử lý
	Gồm 3 tầng: testcase, tầng object và tầng UI
	+ Tầng testcase: chứa testcase để gọi ra các phương thức trong tầng object theo steps mong muốn
	+ Tầng Object: chứa các method để thao tác với các locator trong từng màn hình
	+ Tầng UI: chứa các thuộc tính static final (default) là các locator cần thao tác
- Page Factory: cũng chia ra các màn hình riêng như page Object, nhưng chỉ gồm 2 tầng:
	+ Tầng testcase: chứa testcase để gọi ra các phương thức trong tầng object theo steps mong muốn
	+ Tầng object: chứa các method thao tác với các thuộc tính (locator), các thuộc tính (locator) được định nghĩa luôn tại đây và sử dụng annotaion @FindBy để định nghĩa ra chúng
- Page Generator: dùng để
	+ Che giấu sự khởi tạo của đối tượng (cụ thể là sự khởi tạo một object mới sau khi thực hiện chuyển trang)
	+ Tạo sự liên kết giữa các object (vd: loginPage = registerPage.clickLoginLink();)
	+ Tránh việc lặp lại steps (ở đây chỉ cần gọi ra method có kiểu public static đã tạo trước đó trong class khác)